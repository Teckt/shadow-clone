name: AI Agent Workflow

on:
  issues:
    types: [labeled, opened]
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours for maintenance tasks

jobs:
  dispatch-agent-task:
    name: Dispatch to AI Agents
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'feature')) ||
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'bug')) ||
      (github.event_name == 'pull_request') ||
      (github.event_name == 'schedule')
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Feature Development Agent
      if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'feature')
      run: |
        node dist/index.js --agent=feature-agent \
          --task=analyze-feature \
          --issue=${{ github.event.issue.number }} \
          --repository=${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Bug Fix Agent
      if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'bug')
      run: |
        node dist/index.js --agent=qa-agent \
          --task=analyze-bug \
          --issue=${{ github.event.issue.number }} \
          --repository=${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Code Review Agent
      if: github.event_name == 'pull_request'
      run: |
        node dist/index.js --agent=code-review-agent \
          --task=review-pr \
          --pr=${{ github.event.pull_request.number }} \
          --repository=${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Maintenance Agent
      if: github.event_name == 'schedule'
      run: |
        node dist/index.js --agent=orchestrator \
          --task=maintenance \
          --repository=${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  brainstorm-features:
    name: Feature Brainstorming
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Run Feature Brainstorming
      run: |
        node dist/index.js --agent=feature-agent \
          --task=brainstorm \
          --repository=${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  project-health-check:
    name: Project Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Run Health Check
      run: |
        node dist/index.js --agent=orchestrator \
          --task=health-check \
          --repository=${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
